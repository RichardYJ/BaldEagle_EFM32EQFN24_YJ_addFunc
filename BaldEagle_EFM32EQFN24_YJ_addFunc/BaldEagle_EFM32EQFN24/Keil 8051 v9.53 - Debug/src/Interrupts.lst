C51 COMPILER V9.53.0.0   INTERRUPTS                                                        02/27/2018 11:24:45 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INTERRUPTS
OBJECT MODULE PLACED IN .\src\Interrupts.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe D:\WorkSpace\MyC
                    -ode\SYNC\BaldEagle_EFM32EQFN24_YJ_addFunc\BaldEagle_EFM32EQFN24\src\Interrupts.c OMF2 LARGE DEBUG OBJECTEXTEND ROM(LARGE
                    -) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(D:\WorkSpace\MyCod
                    -e\SYNC\BaldEagle_EFM32EQFN24_YJ_addFunc\BaldEagle_EFM32EQFN24\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051
                    -/v4.1.1//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.1//Device/EFM8LB1/inc) PRI
                    -NT(.\src\Interrupts.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\Interrupts.OBJ)

line level    source

   1          
   2          
   3          #include <SI_EFM8LB1_Register_Enums.h>
   4          #include "EFM8LB1_SMBus_MasterMultibyte.h"
   5          #include "EFM8LB1_I2C_Slave.h"
   6          typedef enum {
   7                  SLAVE_NORMAL_DATA, SLAVE_DATA_ADDRESS,
   8          } SLAVE_WRITE_DATA_TYPE;
   9          
  10          extern volatile uint8_t nWR;
  11          extern uint32_t ADC_AVG;
  12          extern bool CONV_COMPLETE;
  13          uint8_t iArry = 0;
  14          bool bTx_4th_byte_nack = false;
  15          
  16          
  17          volatile uint8_t I2C1_slaveWriteData = 0x16;
  18          
  19          
  20          uint8_t xdata EEPROM_Buffer[] =
  21          #if 0   
                              {
                                              17,             //B0
                                              5, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                              0, 0, 0, 0, 0, 0, 0, 0,
              
                                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 0, 0, 0,
                                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                              0,              //B127
              
                                              17, 0, 35,
                                              128,            //136
                                              0, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 8, 70, 73, 84,
                                              32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 9, 58, 49, 48,
                                              48, 50, 57, 55, 49, 49, 48, 49, 32, 32, 32, 32, 32, 32, 49, 32,
                                              66, 104, 7, 208, 0, 99,
                                              2,              //CR4=11 SR4=2 AOC=1?¡§¡ã24
                                              0, 0, 0, 53, 50, 56, 54, 50, 48, 55, 53, 48, 32, 32, 32, 32, 32,
                                              32, 32, 49, 53, 49, 48, 49, 51, 32, 32, 0, 0, 0, 41,
              
                                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              
                              };
              #else
  49          {
  50          17,  
  51          7,
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        02/27/2018 11:24:45 PAGE 2   

  52          0,
  53          0,
  54          0,
  55          0,
  56          1,
  57          0,
  58          0,
  59          0,
  60          0,
  61          0,
  62          0,
  63          0,
  64          0,
  65          0,
  66          0,
  67          0,
  68          0,
  69          0,
  70          0,
  71          0,
  72          16,
  73          227,
  74          0,
  75          0,
  76          132,
  77          157,
  78          0,
  79          0,
  80          0,
  81          0,
  82          0,
  83          0,
  84          0,
  85          0, //RX1 power LSB
  86          0,
  87          0, //RX2 power LSB
  88          0,
  89          0, //RX3 power LSB
  90          0,
  91          0, //RX4 power LSB
  92          0,
  93          0,
  94          0,
  95          0,
  96          0,
  97          0,
  98          0,
  99          0,
 100          0,
 101          0,
 102          0,
 103          0,
 104          0,
 105          0,
 106          0,
 107          0,
 108          0,
 109          0,
 110          0,
 111          0,
 112          0,
 113          0,
 114          0,
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        02/27/2018 11:24:45 PAGE 3   

 115          0,
 116          0,
 117          0,
 118          0,
 119          0,
 120          0,
 121          0,
 122          0,
 123          0,
 124          0,
 125          0,
 126          0,
 127          0,
 128          0,
 129          0,
 130          0,
 131          0,
 132          0,
 133          0,
 134          0,
 135          0,
 136          0,
 137          0,
 138          0,
 139          0,
 140          0,
 141          0,
 142          0,
 143          0,
 144          0,
 145          0,
 146          0,
 147          0,
 148          255, //CDR Control
 149          0,
 150          0,
 151          0,
 152          0,
 153          0,
 154          0,
 155          0,
 156          0,
 157          0,
 158          0,
 159          2,
 160          8,
 161          0,
 162          0,
 163          0,
 164          0,
 165          0,
 166          0,
 167          0,
 168          0,
 169          0,
 170          0,
 171          0,
 172          0,
 173          0,
 174          0,
 175          0,
 176          0,
 177          0,  //page0
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        02/27/2018 11:24:45 PAGE 4   

 178          17,  
 179          204,
 180          33,
 181          128,
 182          0,
 183          0,
 184          0,
 185          0,
 186          0,
 187          0,
 188          0,
 189          5,
 190          255,
 191          0,
 192          0,
 193          0,
 194          0,
 195          0,
 196          3,
 197          240, //wavelength ?850nm
 198          79,
 199          69,
 200          77,
 201          32,
 202          67,
 203          79,
 204          82,
 205          80,
 206          32,
 207          32,
 208          32,
 209          32,
 210          32,
 211          32,
 212          32,
 213          32,
 214          31,
 215          0,
 216          144,
 217          101,
 218          0,
 219          0,
 220          0,
 221          0,
 222          0,
 223          0,
 224          0,
 225          0,
 226          0,
 227          0,
 228          0,
 229          0,
 230          0,
 231          0,
 232          0,
 233          0,
 234          49,
 235          54,
 236          0,  //wavelength or Copper cable attenuation
 237          0,
 238          0,  //wavelength tolerance
 239          0,
 240          0,
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        02/27/2018 11:24:45 PAGE 5   

 241          54,
 242          25,
 243          7,
 244          255,
 245          220,
 246          67,
 247          114,
 248          101,
 249          100,
 250          111,
 251          32,
 252          32,
 253          32,
 254          32,
 255          32,
 256          32,
 257          32,
 258          32,
 259          32,
 260          32,
 261          32,
 262          49,
 263          56,
 264          48,
 265          49,
 266          48,
 267          52,
 268          32,
 269          32,
 270          8,
 271          0,
 272          103,
 273          36,
 274          32,
 275          32,
 276          32,
 277          32,
 278          32,
 279          32,
 280          32,
 281          32,
 282          32,
 283          32,
 284          32,
 285          32,
 286          32,
 287          32,
 288          32,
 289          32,
 290          0,
 291          0,
 292          0,
 293          0,
 294          0,
 295          0,
 296          0,
 297          0,
 298          0,
 299          0,
 300          0,
 301          0,
 302          0,
 303          0,
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        02/27/2018 11:24:45 PAGE 6   

 304          0,
 305          0,   //page1
 306          0,  
 307          0,
 308          0,
 309          0,
 310          0,
 311          0,
 312          0,
 313          0,
 314          0,
 315          0,
 316          0,
 317          0,
 318          0,
 319          0,
 320          0,
 321          0,
 322          0,
 323          0,
 324          0,
 325          0,
 326          0,
 327          0,
 328          0,
 329          0,
 330          0,
 331          0,
 332          0,
 333          0,
 334          0,
 335          0,
 336          0,
 337          0,
 338          0,
 339          0,
 340          0,
 341          0,
 342          0,
 343          0,
 344          0,
 345          0,
 346          0,
 347          0,
 348          0,
 349          0,
 350          0,
 351          0,
 352          0,
 353          0,
 354          0,
 355          0,
 356          0,
 357          0,
 358          0,
 359          0,
 360          0,
 361          0,
 362          0,
 363          0,
 364          0,
 365          0,
 366          0,
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        02/27/2018 11:24:45 PAGE 7   

 367          0,
 368          0,
 369          0,
 370          0,
 371          0,
 372          0,
 373          0,
 374          0,
 375          0,
 376          0,
 377          0,
 378          0,
 379          0,
 380          0,
 381          0,
 382          0,
 383          0,
 384          0,
 385          0,
 386          0,
 387          0,
 388          0,
 389          0,
 390          0,
 391          0,
 392          0,
 393          0,
 394          0,
 395          0,
 396          0,
 397          0,
 398          0,
 399          0,
 400          0,
 401          0,
 402          0,
 403          0,
 404          0,
 405          0,
 406          0,
 407          0,
 408          0,
 409          0,
 410          0,
 411          0,
 412          0,
 413          0,
 414          0,
 415          0,
 416          0,
 417          0,
 418          0,
 419          0,
 420          0,
 421          0,
 422          0,
 423          0,
 424          0,
 425          0,
 426          0,
 427          0,
 428          0,
 429          0,
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        02/27/2018 11:24:45 PAGE 8   

 430          0,
 431          0,
 432          0,
 433          0, //page2
 434          0,  
 435          0,
 436          0,
 437          0,
 438          0,
 439          0,
 440          0,
 441          0,
 442          0,
 443          0,
 444          0,
 445          0,
 446          0,
 447          0,
 448          0,
 449          0,
 450          0,
 451          0,
 452          0,
 453          0,
 454          0,
 455          0,
 456          0,
 457          0,
 458          0,
 459          0,
 460          0,
 461          0,
 462          0,
 463          0,
 464          0,
 465          0,
 466          0,
 467          0,
 468          0,
 469          0,
 470          0,
 471          0,
 472          0,
 473          0,
 474          0,
 475          0,
 476          0,
 477          0,
 478          0,
 479          0,
 480          0,
 481          0,
 482          0,
 483          0,
 484          0,
 485          0,
 486          0,
 487          0,
 488          0,
 489          0,
 490          0,
 491          0,
 492          0,
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        02/27/2018 11:24:45 PAGE 9   

 493          0,
 494          0,
 495          0,
 496          0,
 497          0,
 498          0,
 499          0,
 500          0,
 501          0,
 502          0,
 503          0,
 504          0,
 505          0,
 506          0,
 507          0,
 508          0,
 509          0,
 510          0,
 511          0,
 512          0,
 513          0,
 514          0,
 515          0,
 516          0,
 517          0,
 518          0,
 519          0,
 520          0,
 521          0,
 522          0,
 523          0,
 524          0,
 525          0,
 526          0,
 527          0,
 528          0,
 529          0,
 530          0,
 531          0,
 532          0,
 533          0,
 534          0,
 535          0,
 536          0,
 537          0,
 538          0,
 539          0,
 540          0,
 541          0,
 542          0,
 543          0,
 544          0,
 545          0,
 546          0,
 547          0,
 548          0,
 549          0,
 550          0,
 551          0,
 552          0,
 553          0,
 554          0,
 555          0,
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        02/27/2018 11:24:45 PAGE 10  

 556          0,
 557          0,
 558          0,
 559          0,
 560          0,
 561          0, //page3
 562          75,  
 563          0,
 564          251,
 565          0,
 566          70,
 567          0,
 568          0,
 569          0,
 570          0,
 571          0,
 572          0,
 573          0,
 574          0,
 575          0,
 576          0,
 577          0,
 578          141,
 579          204,
 580          116,
 581          4,
 582          135,
 583          90,
 584          121,
 585          24,
 586          0,
 587          0,
 588          0,
 589          0,
 590          0,
 591          0,
 592          0,
 593          0,
 594          0,
 595          0,
 596          0,
 597          0,
 598          0,
 599          0,
 600          0,
 601          0,
 602          0,
 603          0,
 604          0,
 605          0,
 606          0,
 607          0,
 608          0,
 609          0,
 610          85,
 611          118,
 612          1,
 613          142,
 614          67,
 615          226,
 616          3,
 617          26,
 618          23,
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        02/27/2018 11:24:45 PAGE 11  

 619          112,
 620          5,
 621          220,
 622          21,
 623          124,
 624          7,
 625          208,
 626          0,
 627          0,
 628          0,
 629          0,
 630          0,
 631          0,
 632          0,
 633          0,
 634          0,
 635          0,
 636          0,
 637          0,
 638          0,
 639          0,
 640          0,
 641          0,
 642          0,
 643          0,
 644          0,
 645          0,
 646          0,
 647          0,
 648          0,
 649          0,
 650          0,
 651          0,
 652          0,
 653          0,
 654          0,
 655          0,
 656          0,
 657          0,
 658          151,
 659          15,
 660          0,
 661          0,
 662          0,
 663          0,
 664          0,
 665          0,
 666          0,
 667          0,
 668          102,
 669          102,
 670          119,
 671          119,
 672          51,
 673          51,
 674          15,
 675          0,
 676          0,
 677          0,
 678          0,
 679          0,
 680          0,
 681          0,
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        02/27/2018 11:24:45 PAGE 12  

 682          0,
 683          0,
 684          0,
 685          0,
 686          0,
 687          0,
 688          0,
 689          0
 690              };
 691          
 692          #endif
 693          
 694          
 695          SI_INTERRUPT (I2C0_ISR, I2C0_IRQn)
 696          {
 697   1              static uint16_t eepromAddress = 0;
 698   1              static uint8_t slaveWriteType = SLAVE_NORMAL_DATA;
 699   1              static uint8_t WriteStat = 0;
 700   1              uint8_t t,j;
 701   1      
 702   1              uint8_t SAVE_SFRPAGE;
 703   1              bool EA_SAVE = IE_EA;
 704   1      //      bool bBridge;
 705   1              IE_EA = 0;
 706   1              SAVE_SFRPAGE = SFRPAGE;
 707   1              SFRPAGE = 0x20;
 708   1      
 709   1              switch (I2C0STAT & I2C_STATUS_VECTOR_MASK) {
 710   2      
 711   2                      case I2C_ADDR_RD:
 712   2                      I2C0STAT &= ~(I2C0STAT_START__BMASK | I2C0STAT_RD__BMASK);
 713   2                      t = EEPROM_Buffer[eepromAddress++];
 714   2                      if(0x0==t)
 715   2                      {
 716   3                              j=t;
 717   3                      }
 718   2                      I2C0DOUT = t;//EEPROM_Buffer[eepromAddress++];
 719   2                      if(sizeof(EEPROM_Buffer) <= eepromAddress)
 720   2                      {
 721   3                              eepromAddress = 0;
 722   3                      }
 723   2                      WriteStat = 0;
 724   2                      break;
 725   2      
 726   2                      case I2C_ADDR_WR:
 727   2                      I2C0STAT &= ~(I2C0STAT_START__BMASK | I2C0STAT_WR__BMASK);
 728   2                      slaveWriteType = SLAVE_DATA_ADDRESS;
 729   2                      WriteStat = 1;
 730   2                      break;
 731   2      
 732   2                      case I2C_RD_DATA:
 733   2                      if ((I2C0STAT & I2C0STAT_NACK__BMASK) == I2C0STAT_NACK__SET) {
 734   3                              I2C0STAT &= ~I2C0STAT_NACK__BMASK;
 735   3                      } else {
 736   3                              t = EEPROM_Buffer[eepromAddress++];
 737   3                              if(0x11==t)
 738   3                              {
 739   4                                      j=t;
 740   4                              }
 741   3                              I2C0DOUT = t;
 742   3      
 743   3                              if(sizeof(EEPROM_Buffer) <= eepromAddress)
 744   3                              {
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        02/27/2018 11:24:45 PAGE 13  

 745   4                                      eepromAddress = 0;
 746   4                              }
 747   3                      }
 748   2                      I2C0STAT &= ~I2C0STAT_RD__BMASK;
 749   2                      break;
 750   2      
 751   2                      case I2C_WR_DATA:
 752   2                      I2C0STAT &= ~I2C0STAT_WR__BMASK;
 753   2      
 754   2                      break;
 755   2      
 756   2                      case I2C_STOSTA:
 757   2                      case I2C_STOSTARD:
 758   2                      I2C0STAT &= ~I2C0STAT_STOP__BMASK;
 759   2      #if 0
                              I2C0CN0 &= ~I2C0CN0_BUSY__BMASK;                // Clear BUSY bit
                              I2C0CN0 |= I2C0FCN0_RFLSH__FLUSH | I2C0FCN0_TFLSH__FLUSH;
              #endif
 763   2      
 764   2      //              WriteStat = 0;//added 20180122
 765   2                      return;
 766   2                      break;
 767   2      
 768   2                      case I2C_STO:
 769   2                      I2C0STAT &= ~I2C0STAT_STOP__BMASK;
 770   2      #if 0
                              I2C0CN0 &= ~I2C0CN0_BUSY__BMASK;                // Clear BUSY bit
                              I2C0CN0 |= I2C0FCN0_RFLSH__FLUSH | I2C0FCN0_TFLSH__FLUSH;
              #endif
 774   2      
 775   2      //              WriteStat = 0;//added 20180122
 776   2                      break;
 777   2                      default:
 778   2                      break;
 779   2              }
 780   1      
 781   1              while((I2C0FCN1 & I2C0FCN1_RXE__BMASK) == I2C0FCN1_RXE__NOT_EMPTY) {
 782   2                      I2C1_slaveWriteData = I2C0DIN;
 783   2                      if(1==WriteStat&&80!=I2C1_slaveWriteData)
 784   2                      {
 785   3                              switch(slaveWriteType)
 786   3                              {
 787   4                                      case SLAVE_DATA_ADDRESS:
 788   4                                      if(I2C1_slaveWriteData>=128)
 789   4                                      {
 790   5                                              eepromAddress = I2C1_slaveWriteData+128*EEPROM_Buffer[127];
 791   5                                      }
 792   4                                      else
 793   4                                      {
 794   5                                              eepromAddress = I2C1_slaveWriteData;
 795   5                                      }
 796   4                                      break;
 797   4      
 798   4                                      case SLAVE_NORMAL_DATA:
 799   4                                      default:
 800   4                                      EEPROM_Buffer[eepromAddress++] = I2C1_slaveWriteData;
 801   4      
 802   4                                      if(sizeof(EEPROM_Buffer) <= eepromAddress)
 803   4                                      {
 804   5                                              eepromAddress = 0;
 805   5                                      }
 806   4                                      //yj20180226 for bridge start
 807   4                                      if(78==(eepromAddress-1)&&(I2C1_slaveWriteData<3))
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        02/27/2018 11:24:45 PAGE 14  

 808   4                                      {
 809   5                                              if(1==I2C1_slaveWriteData){
 810   6                                                      SMB0_I2C_MasterWrite( (EEPROM_Buffer[74]<<8)|EEPROM_Buffer[75], (EEPROM_Buffer[76]<<8)| EEPROM_Buffe
             -r[77] );
 811   6                                                      EEPROM_Buffer[78] = 0;    //complete
 812   6                                              }
 813   5                                              else{
 814   6                                                      
 815   6                                                      uint16_t rValue;
 816   6                                                      SMB0_I2C_MasterRead( (EEPROM_Buffer[74]<<8)|EEPROM_Buffer[75] );
 817   6                                                      EEPROM_Buffer[76] = rValue >> 8;
 818   6                                                      EEPROM_Buffer[77] = rValue & 0x00ff;
 819   6                                                      EEPROM_Buffer[78] = 0;    //complete
 820   6                                              }
 821   5                                      }
 822   4                                      //yj20180226 for bridge end
 823   4                                      break;
 824   4                              }
 825   3      
 826   3                              slaveWriteType = SLAVE_NORMAL_DATA;
 827   3      //                      WriteStat = 0;//added 20180122
 828   3                      }
 829   2              }
 830   1      
 831   1              I2C0STAT &= ~I2C0STAT_I2C0INT__BMASK;
 832   1              SFRPAGE = SAVE_SFRPAGE;
 833   1              IE_EA = EA_SAVE;
 834   1      
 835   1      }
 836          
 837          
 838          SI_INTERRUPT (SMBUS0_ISR, SMBUS0_IRQn)
 839          {
 840   1              bool FAIL = 0;
 841   1              static uint8_t sent_byte_counter;
 842   1              static uint8_t rec_byte_counter;
 843   1      
 844   1              if (SMB0CN0_ARBLOST == 0)
 845   1              {
 846   2      
 847   2                      switch (SMB0CN0 & 0xF0)
 848   2                      {
 849   3      
 850   3                              case SMB_MTSTA:
 851   3                              SMB0DAT = TARGET<<1;
 852   3                              SMB0DAT &= 0xFE;
 853   3                              SMB0DAT |= (uint8_t) SMB_RW;
 854   3                              SMB0CN0_STA = 0;
 855   3                              rec_byte_counter = 1;
 856   3                              sent_byte_counter = 1;
 857   3                              break;
 858   3      
 859   3      
 860   3                              case SMB_MTDB:
 861   3                              if (SMB0CN0_ACK)
 862   3                              {
 863   4                                      if (SMB_RW == WRITE)
 864   4                                      {
 865   5                                              if (sent_byte_counter <= nWR /*NUM_BYTES_WR*/)
 866   5                                              {
 867   6      
 868   6                                                      SMB0DAT = SMB_DATA_OUT[sent_byte_counter-1];
 869   6                                                      sent_byte_counter++;
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        02/27/2018 11:24:45 PAGE 15  

 870   6                                              }
 871   5                                              else
 872   5                                              {
 873   6                                                      SMB0CN0_STO = 1;
 874   6                                                      SMB_BUSY = 0;
 875   6                                              }
 876   5                                      }
 877   4                                      else {}
 878   4                              }
 879   3                              else
 880   3                              {
 881   4                                      if(bTx_4th_byte_nack)
 882   4                                      {
 883   5                                              SMB0CN0_STO = 1;
 884   5                                              SMB_BUSY = 0;
 885   5                                              break;
 886   5                                      }
 887   4                                      SMB0CN0_STO = 1;
 888   4                                      SMB0CN0_STA = 1;
 889   4                                      NUM_ERRORS++;
 890   4                              }
 891   3                              break;
 892   3      
 893   3      
 894   3                              case SMB_MRDB:
 895   3                              if (rec_byte_counter < NUM_BYTES_RD)
 896   3                              {
 897   4                                      SMB_DATA_IN[rec_byte_counter-1] = SMB0DAT;
 898   4      
 899   4                                      SMB0CN0_ACK = 1;
 900   4                                      rec_byte_counter++;
 901   4                              }
 902   3                              else
 903   3                              {
 904   4                                      SMB_DATA_IN[rec_byte_counter-1] = SMB0DAT;
 905   4      
 906   4                                      SMB_BUSY = 0;
 907   4                                      SMB0CN0_ACK = 0;
 908   4      
 909   4                                      SMB0CN0_STO = 1;
 910   4                              }
 911   3                              break;
 912   3      
 913   3                              default:
 914   3                              FAIL = 1;
 915   3                              break;
 916   3      
 917   3                      }
 918   2              }
 919   1              else
 920   1              {
 921   2      
 922   2                      FAIL = 1;
 923   2              }
 924   1      
 925   1              if (FAIL)
 926   1              {
 927   2                      SMB0CF &= ~0x80;
 928   2                      SMB0CF |= 0x80;
 929   2                      SMB0CN0_STA = 0;
 930   2                      SMB0CN0_STO = 0;
 931   2                      SMB0CN0_ACK = 0;
 932   2      
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        02/27/2018 11:24:45 PAGE 16  

 933   2                      SMB_BUSY = 0;
 934   2      
 935   2                      FAIL = 0;
 936   2      
 937   2      
 938   2                      NUM_ERRORS++;
 939   2              }
 940   1      
 941   1              SMB0CN0_SI = 0;
 942   1      }
 943          
 944          SI_INTERRUPT (TIMER3_ISR, TIMER3_IRQn)
 945          {
 946   1              SMB0CF &= ~0x80;
 947   1              SMB0CF |= 0x80;
 948   1              TMR3CN0 &= ~0x80;
 949   1      
 950   1              SMB0CN0_STA = 0;
 951   1              SMB_BUSY = 0;
 952   1      }
 953          
 954          SI_INTERRUPT (TIMER4_ISR, TIMER4_IRQn)
 955          {
 956   1              SFRPAGE = PG3_PAGE;
 957   1      
 958   1              I2C0CN0 &= ~I2C0CN0_I2C0EN__BMASK;
 959   1              I2C0CN0 |= I2C0CN0_I2C0EN__ENABLED;
 960   1      
 961   1              SFRPAGE = PG2_PAGE;
 962   1              TMR4CN0 &= ~TMR4CN0_TF4H__BMASK;
 963   1      
 964   1      }
 965          
 966          SI_INTERRUPT (ADC0EOC_ISR, ADC0EOC_IRQn)
 967          {
 968   1                 ADC0CN0_ADINT = 0;
 969   1                 ADC_AVG = ADC0/4;
 970   1                 CONV_COMPLETE = 1;
 971   1      
 972   1      }
 973          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    899    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    648       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       2
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
